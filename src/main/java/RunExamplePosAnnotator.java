import Annotators.ExamplePosAnnotator;
import Writer.ExamplePosPlainTextWriter;
import org.apache.uima.collection.CollectionReader;
import org.apache.uima.fit.factory.AggregateBuilder;
import org.apache.uima.fit.factory.AnalysisEngineFactory;
import org.apache.uima.fit.pipeline.SimplePipeline;
import org.cleartk.ml.jar.JarClassifierBuilder;
import org.cleartk.opennlp.tools.SentenceAnnotator;
import org.cleartk.token.tokenizer.TokenAnnotator;
import org.cleartk.util.ae.UriToDocumentTextAnnotator;
import org.cleartk.util.cr.UriCollectionReader;

import java.io.File;
import java.util.Arrays;
import java.util.List;

public class RunExamplePosAnnotator {
    public static void main(String[] args) throws Exception {
        // A collection reader that creates one CAS per file, containing the file's URI
        File file = new File(ClassLoader.getSystemClassLoader().getResource("data/").getFile());
        List<File> files = Arrays.asList(file.listFiles());
        CollectionReader reader = UriCollectionReader.getCollectionReaderFromFiles(files);

        // The pipeline of annotators
        AggregateBuilder builder = new AggregateBuilder();

        // An annotator that reads in the file text
        builder.add(UriToDocumentTextAnnotator.getDescription());

        // An annotator that adds Sentence annotations
        builder.add(SentenceAnnotator.getDescription());

        // An annotator that adds Token annotations
        builder.add(TokenAnnotator.getDescription());

        // The POS annotator, configured to make predictions
        builder.add(ExamplePosAnnotator
                .getClassifierDescription(JarClassifierBuilder.getModelJarFile(
                        ExamplePosAnnotator.DEFAULT_OUTPUT_DIRECTORY).getPath()));

        // An annotator that write out the tokens and their part of speech tags
        builder.add(AnalysisEngineFactory.createEngineDescription(
                ExamplePosPlainTextWriter.class,
                ExamplePosPlainTextWriter.PARAM_OUTPUT_DIRECTORY_NAME,
                ExamplePosPlainTextWriter.DEFAULT_OUTPUT_DIRECTORY));

        // Run the pipeline of annotators on each of the CASes produced by the reader
        SimplePipeline.runPipeline(reader, builder.createAggregateDescription());

        System.out.println("Please look at the file generated by this program: "
                + ExamplePosPlainTextWriter.DEFAULT_OUTPUT_DIRECTORY + "/2008_Sichuan_earthquake.txt.pos");
    }
}
